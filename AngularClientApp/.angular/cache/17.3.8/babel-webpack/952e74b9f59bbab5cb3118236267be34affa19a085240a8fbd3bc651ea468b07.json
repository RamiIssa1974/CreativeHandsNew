{"ast":null,"code":"import { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { VideosService } from '../../services/videos.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/videos.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../services/auth.service\";\nimport * as i5 from \"@angular/common\";\nconst _c0 = a0 => ({\n  \"is-invalid\": a0\n});\nfunction AddVideoComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵelement(1, \"img\", 26);\n    i0.ɵɵelementEnd();\n  }\n}\nexport let AddVideoComponent = /*#__PURE__*/(() => {\n  class AddVideoComponent {\n    get isLoggedIn() {\n      return this.authService.isLoggedIn;\n    }\n    get isAdmin() {\n      return this.authService.isAdmin;\n    }\n    get videosId() {\n      return this.videoForm.get('Id');\n    }\n    get videosName() {\n      return this.videoForm.get('Name');\n    }\n    get videosTitle() {\n      return this.videoForm.get('Title');\n    }\n    get videosDescription() {\n      return this.videoForm.get('Description');\n    }\n    constructor(route, videoServices, fb, authService, router) {\n      this.route = route;\n      this.videoServices = videoServices;\n      this.fb = fb;\n      this.authService = authService;\n      this.router = router;\n      this.isLoading = false;\n      this.videoId = -1;\n      this.video = null;\n      this.errorMessage = 'OK';\n      this.fileToUpload = null;\n      this.selectedfileName = \"please select a file\";\n      this.videoForm = new FormGroup({});\n    }\n    ngOnInit() {\n      if (!(this.isLoggedIn && this.isAdmin)) {\n        this.router.navigateByUrl(this.authService.redirectUrl || '/');\n      }\n      this.videoForm = this.getEmptyForm();\n      this.route.params.subscribe(params => {\n        this.videoId = params['id'];\n        let request = {\n          Id: this.videoId,\n          Name: \"\",\n          Title: \"\",\n          Description: \"\"\n        };\n        if (this.videoId != null) {\n          this.videoServices.getVideos(request).subscribe({\n            next: videos => {\n              this.video = videos.find(pr => pr.Id == this.videoId) || null;\n              if (this.video) {\n                this.videoForm = this.getFormFromVideo(this.video);\n              } else {\n                this.videoForm = this.getEmptyForm();\n              }\n            },\n            error: err => this.errorMessage = err\n          });\n        } else {\n          this.videoForm = this.getEmptyForm();\n        }\n      });\n    }\n    getEmptyForm() {\n      return this.fb.group({\n        Id: [{\n          value: 0,\n          disabled: true\n        }],\n        Name: [\"\", [Validators.required, Validators.minLength(3)]],\n        Title: \"\",\n        Description: \"\"\n      });\n    }\n    getFormFromVideo(video) {\n      var formGroup = this.fb.group({\n        Id: [{\n          value: video.Id,\n          disabled: true\n        }],\n        Name: [video.Name, [Validators.required, Validators.minLength(3)]],\n        Title: video.Title,\n        Description: video.Description\n      });\n      return formGroup;\n    }\n    onSelectFile(files) {\n      this.selectedfileName = files[0].name;\n      this.fileToUpload = files[0];\n      this.videoForm.controls['Name'].setValue(files[0].name);\n    }\n    saveVideo() {\n      this.isLoading = true;\n      // Ensure fileToUpload is not null\n      if (!this.fileToUpload) {\n        this.errorMessage = 'No file selected';\n        this.isLoading = false;\n        return;\n      }\n      let request = {\n        Id: this.videosId?.value ?? 0,\n        Name: this.videosName?.value ?? '',\n        Title: this.videosTitle?.value ?? '',\n        Description: this.videosDescription?.value ?? ''\n      };\n      this.videoServices.saveVideo(this.fileToUpload, request).subscribe(res => {\n        this.isLoading = false;\n        this.router.navigateByUrl('/video/' + res.VideoId);\n      }, error => {\n        this.isLoading = false;\n        this.errorMessage = 'Failed to save video';\n      });\n    }\n    static #_ = this.ɵfac = function AddVideoComponent_Factory(t) {\n      return new (t || AddVideoComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.VideosService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.AuthService), i0.ɵɵdirectiveInject(i1.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddVideoComponent,\n      selectors: [[\"app-add-video\"]],\n      decls: 36,\n      vars: 8,\n      consts: [[\"fileUploader\", \"\"], [\"novalidate\", \"\", 3, \"ngSubmit\", \"formGroup\"], [\"class\", \"overlay\", 4, \"ngIf\"], [1, \"card-body\"], [1, \"page-title\"], [1, \"video-info\"], [1, \"row\"], [\"for\", \"idId\", 1, \"data-label\"], [\"id\", \"idId\", \"formControlName\", \"Id\", 1, \"form-control\", \"product-price\", 3, \"disabled\"], [\"for\", \"videoName\", 1, \"data-label\"], [\"id\", \"videoName\", \"formControlName\", \"Name\", 1, \"video-name\", \"form-control\", 3, \"ngClass\"], [\"for\", \"idTitle\", 1, \"data-label\"], [\"id\", \"idTitle\", \"formControlName\", \"Title\", 1, \"video-title\", \"form-control\"], [\"for\", \"descriptionId\", 1, \"data-label\"], [\"id\", \"descriptionId\", \"formControlName\", \"Description\", 1, \"product-Description\", \"form-control\"], [1, \"form-group\", \"row\", \"video-image\"], [1, \"form-group\", \"selected-video-image\"], [1, \"video-image-name\"], [1, \"form-group\", \"uploader\"], [\"for\", \"fileUploader\", 1, \"btn\", \"btn-primary\", \"mr-3\"], [\"src\", \"/assets/Images/AddFile.png\"], [\"id\", \"selectedFileId\", \"name\", \"selectedFileId\", \"type\", \"text\", 1, \"form-control\", \"file-input\", 3, \"value\"], [\"type\", \"file\", \"id\", \"fileUploader\", \"multiple\", \"\", \"accept\", \"video/*\", 2, \"display\", \"none\", 3, \"change\"], [1, \"submit-div\"], [\"type\", \"submit\", \"title\", \"\\u062D\\u0641\\u0638\", 1, \"btn\", \"btn-primary\", \"mr-3\"], [1, \"overlay\"], [\"src\", \"/assets/Images/loading.gif\", 1, \"waiting-image\"]],\n      template: function AddVideoComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function AddVideoComponent_Template_form_ngSubmit_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.saveVideo());\n          });\n          i0.ɵɵtemplate(1, AddVideoComponent_div_1_Template, 2, 0, \"div\", 2);\n          i0.ɵɵelementStart(2, \"div\", 3)(3, \"div\", 4);\n          i0.ɵɵtext(4, \"\\u0627\\u0636\\u0627\\u0641\\u0629 \\u0641\\u064A\\u062F\\u064A\\u0648\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 5)(6, \"div\", 6)(7, \"label\", 7);\n          i0.ɵɵtext(8, \"\\u0627\\u0644\\u0645\\u0639\\u0631\\u0641:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"input\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\", 6)(11, \"label\", 9);\n          i0.ɵɵtext(12, \"\\u0627\\u0633\\u0645 \\u0627\\u0644\\u0641\\u064A\\u062F\\u064A\\u0648:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"input\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"div\", 6)(15, \"label\", 11);\n          i0.ɵɵtext(16, \"\\u0627\\u0644\\u0639\\u0646\\u0648\\u0627\\u0646:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"input\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"div\", 6)(19, \"label\", 13);\n          i0.ɵɵtext(20, \"\\u0627\\u0644\\u0648\\u0635\\u0641:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(21, \"textarea\", 14);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"div\", 15)(23, \"div\", 16)(24, \"div\", 17);\n          i0.ɵɵtext(25);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(26, \"div\", 18)(27, \"label\", 19);\n          i0.ɵɵelement(28, \"img\", 20);\n          i0.ɵɵtext(29, \"\\u0627\\u062E\\u062A\\u0631 \\u0641\\u064A\\u062F\\u064A\\u0648\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(30, \"input\", 21);\n          i0.ɵɵelementStart(31, \"input\", 22, 0);\n          i0.ɵɵlistener(\"change\", function AddVideoComponent_Template_input_change_31_listener() {\n            i0.ɵɵrestoreView(_r1);\n            const fileUploader_r2 = i0.ɵɵreference(32);\n            return i0.ɵɵresetView(ctx.onSelectFile(fileUploader_r2.files));\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(33, \"div\", 23)(34, \"button\", 24);\n          i0.ɵɵtext(35, \"\\u062D\\u0641\\u0638\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.videoForm);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"disabled\", true);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ((ctx.videosName == null ? null : ctx.videosName.touched) || (ctx.videosName == null ? null : ctx.videosName.dirty)) && !(ctx.videosName == null ? null : ctx.videosName.valid)));\n          i0.ɵɵadvance(12);\n          i0.ɵɵtextInterpolate(ctx.videosName == null ? null : ctx.videosName.value);\n          i0.ɵɵadvance(5);\n          i0.ɵɵpropertyInterpolate(\"value\", ctx.videosName == null ? null : ctx.videosName.value);\n        }\n      },\n      dependencies: [i5.NgClass, i5.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n      styles: [\".overlay[_ngcontent-%COMP%]{background:#e9e9e9;position:absolute;inset:0;opacity:.5;z-index:1}.waiting-image[_ngcontent-%COMP%]{position:absolute;top:50%;left:45%}.page-title[_ngcontent-%COMP%]{font-weight:700;font-size:18px}.card-body[_ngcontent-%COMP%]{position:relative;border:10px solid aliceblue;background-color:#ddd8c1;width:100%;text-align:center}.video-info[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]{text-align:right;padding:10px}.submit-div[_ngcontent-%COMP%]{margin:20px 0;text-align:center}.submit-div[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]{width:80%;margin:0!important}.uploader[_ngcontent-%COMP%]{width:100%}.uploader[_ngcontent-%COMP%]   .file-input[_ngcontent-%COMP%]{display:inline;width:65%;margin-right:13px}.uploader[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]{float:right;margin:0!important;padding:4px!important}.uploader[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:20px;background-color:transparent;margin-left:5px;height:20px}.data-label[_ngcontent-%COMP%]{margin-right:20px;font-weight:700;text-align:right;width:18%}.video-info[_ngcontent-%COMP%]{padding:7px;border:1px solid orange;border-radius:10px;width:500px;display:inline-block;margin:10px;background-color:#f0f8ff}.video-info[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .video-info[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%], .video-info[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{width:70%}.form-group.row[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{width:100%;margin:auto;text-align:center;font-weight:700;font-size:x-large;color:brown}.dropdown-select[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{position:absolute;left:12px;top:12px;font-size:20px}.status-id-label[_ngcontent-%COMP%]{margin-left:10px;font-weight:700;display:flex}.dropdown-select[_ngcontent-%COMP%]{display:inline-block;position:relative;font-family:Arial;margin-left:10px}.dropdown-select[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{height:40px;min-width:361px;border-radius:5px;border-color:#ced4da;padding-right:15px}.video-image[_ngcontent-%COMP%]{display:inline-block;border:1px solid gray;padding:5px;text-align:right;width:83%}.selected-video-image[_ngcontent-%COMP%]{display:inline-block;border:1px solid gray;padding:5px;text-align:right;width:100%;margin-bottom:10px}.video-image-thumb[_ngcontent-%COMP%]{margin-right:10px;display:inline-block}.video-image-thumb[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{border-radius:5px;border:1px solid green;width:40px!important;height:40px!important}.video-image-name[_ngcontent-%COMP%]{margin-right:5%;width:65%;display:inline-block}.video-image-icon[_ngcontent-%COMP%]{width:15%;display:inline-block;text-align:left}.video-image[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{height:180px;width:210px}.video-image[_ngcontent-%COMP%]   .delete-icon[_ngcontent-%COMP%]{cursor:pointer;float:left;margin:5px 5px 0 10px;width:20px;height:20px;background-color:transparent}.video-amount[_ngcontent-%COMP%]{color:#2e8b57;display:inline-block;width:30%}.video-id[_ngcontent-%COMP%]{font-weight:700}@media only screen and (max-width: 600px){.video-info[_ngcontent-%COMP%]{padding:7px;border:1px solid orange;border-radius:10px;width:95%;display:inline-block;margin:10px;background-color:#f0f8ff}.video-info[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .purchase-info[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]{width:85%;margin-right:20px;margin-bottom:5px}.data-label[_ngcontent-%COMP%]{margin-right:20px;font-weight:700;text-align:right;width:80%}.video-image-name[_ngcontent-%COMP%]{margin-right:5%;width:48%;display:inline-block}.card-body[_ngcontent-%COMP%]{padding:0;border:none}.uploader[_ngcontent-%COMP%]   .file-input[_ngcontent-%COMP%]{display:inline;width:98%!important;margin:10px 0 0!important}.submit-div[_ngcontent-%COMP%]{margin:20px 0;text-align:center}.submit-div[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]{width:80%;margin:0!important}}\"]\n    });\n  }\n  return AddVideoComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}