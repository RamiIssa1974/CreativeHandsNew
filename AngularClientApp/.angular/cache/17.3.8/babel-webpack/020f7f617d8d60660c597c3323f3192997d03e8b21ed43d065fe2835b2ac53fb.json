{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let PurchaseService = /*#__PURE__*/(() => {\n  class PurchaseService {\n    constructor(http) {\n      this.http = http;\n      this.getPurchasesUrl = environment.baseApiUrl + \"api/purchases/GetPurchases\";\n      this.getPurchaseByIdUrl = environment.baseApiUrl + \"api/purchases/purchases\";\n      this.savePurchaseUrl = environment.baseApiUrl + \"api/purchases/purchase\"; //SavePurchase;\n      this.getProvidersUrl = environment.baseApiUrl + \"api/purchases/GetProviders\";\n      this.saveProviderUrl = environment.baseApiUrl + \"api/purchases/purchase\";\n      this.uploadPurchaseFileUrl = environment.baseApiUrl + \"api/video/SaveVideo\";\n    }\n    getPurchaseById(purchaseId) {\n      return this.http.get(this.getPurchaseByIdUrl + \"?purchaseId=\" + purchaseId.toString());\n    }\n    getPurchases(request) {\n      if (!request.FromDate) {\n        request.FromDate = '2000-01-01T00:00:00'; // or another default value\n      }\n      if (!request.ToDate) {\n        request.ToDate = new Date().toISOString(); // current date as default\n      }\n      return this.http.post(this.getPurchasesUrl, request);\n    }\n    savePurchase(purchase) {\n      console.log(\"purchase data: \", purchase);\n      return this.http.post(this.savePurchaseUrl, purchase);\n    }\n    uploadFile(fileToUpload, purchaseId) {\n      const fd = new FormData();\n      fd.append(fileToUpload.name, fileToUpload, fileToUpload.name);\n      fd.append(\"purchaseId\", purchaseId.toString());\n      return this.http.post(this.uploadPurchaseFileUrl, fd);\n    }\n    getProviders() {\n      return this.http.get(this.getProvidersUrl);\n    }\n    saveProvider(request) {\n      return this.http.post(this.saveProviderUrl, request);\n    }\n    static #_ = this.ɵfac = function PurchaseService_Factory(t) {\n      return new (t || PurchaseService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PurchaseService,\n      factory: PurchaseService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return PurchaseService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}